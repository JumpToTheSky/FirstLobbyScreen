{"version":3,"sources":["../../../../assets/Script/assets/Script/soundController.js"],"names":["cc","Class","extends","Component","properties","audioClick","default","type","AudioClip","audioBgm","bgmVolume","Float","range","slide","tooltip","loopBgm","volumeDisplayLabel","Label","volumeStep","min","max","onLoad","playBgm","updateVolumeLabel","current","audioEngine","play","playSoundClick","increaseBgmVolume","setBgmVolume","decreaseBgmVolume","volume","Math","setVolume","volumePercent","round","string","onDestroy"],"mappings":";;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SALJ;AASRC,kBAAU;AACNH,qBAAS,IADH;AAENC,kBAAMP,GAAGQ;AAFH,SATF;AAaRE,mBAAW;AACPJ,qBAAS,EADF;AAEPC,kBAAMP,GAAGW,KAFF;AAGPC,mBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAHA;AAIPC,mBAAO,IAJA;AAKPC,qBAAS;AALF,SAbH;AAoBRC,iBAAS;AACLT,qBAAS,IADJ;AAELQ,qBAAS;AAFJ,SApBD;AAwBRE,4BAAoB;AAChBV,qBAAS,IADO;AAEhBC,kBAAMP,GAAGiB,KAFO;AAGhBH,qBAAS;AAHO,SAxBZ;AA6BRI,oBAAY;AACRZ,qBAAS,CADD;AAERC,kBAAMP,GAAGW,KAFD;AAGRQ,iBAAK,GAHG,EAGE;AACVC,iBAAK,CAJG,EAIC;AACTN,qBAAS;AALD;AA7BJ,KAHP;;AAyCL;;AAEA;;AAEAO,UA7CK,oBA6CI;AACL,aAAKC,OAAL;AACA,aAAKC,iBAAL;AACH,KAhDI;AAkDLD,WAlDK,qBAkDK;AACN,aAAKE,OAAL,GAAexB,GAAGyB,WAAH,CAAeC,IAAf,CAAoB,KAAKjB,QAAzB,EAAmC,KAAnC,EAA0C,CAA1C,CAAf;AACH,KApDI;AAsDLkB,kBAtDK,4BAsDY;AACb,aAAKH,OAAL,GAAexB,GAAGyB,WAAH,CAAeC,IAAf,CAAoB,KAAKrB,UAAzB,EAAqC,KAArC,EAA4C,CAA5C,CAAf;AAEH,KAzDI;AA0DLuB,qBA1DK,+BA0De;AAChB,aAAKC,YAAL,CAAkB,KAAKnB,SAAL,GAAiB,KAAKQ,UAAxC;AACAS;AACH,KA7DI;AA+DLG,qBA/DK,+BA+De;AAChB,aAAKD,YAAL,CAAkB,KAAKnB,SAAL,GAAiB,KAAKQ,UAAxC;AACAS;AACH,KAlEI;AAoELE,gBApEK,wBAoEQE,MApER,EAoEgB;AACjB,aAAKrB,SAAL,GAAiB,KAAKA,SAAL,GAAiBsB,KAAKZ,GAAL,CAAS,CAAT,EAAYY,KAAKb,GAAL,CAAS,EAAT,EAAaY,MAAb,CAAZ,CAAlC;AACA/B,WAAGyB,WAAH,CAAeQ,SAAf,CAAyB,KAAKT,OAA9B,EAAuC,KAAKd,SAA5C;AACA,aAAKa,iBAAL;AACH,KAxEI;AA0ELA,qBA1EK,+BA0Ee;AAChB,YAAI,KAAKP,kBAAT,EAA6B;AACzB,gBAAIkB,gBAAgBF,KAAKG,KAAL,CAAW,KAAKzB,SAAL,GAAiB,EAA5B,CAApB;AACA,iBAAKM,kBAAL,CAAwBoB,MAAxB,+BAA8CF,aAA9C;AACH;AACJ,KA/EI;AAiFLG,aAjFK,uBAiFO,CACX;AAlFI,CAAT","file":"soundController.js","sourceRoot":"../../../../assets/Script","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // audioSource: {\n        //     type: cc.AudioSource,\n        //     default: null\n        // },\n        audioClick: {\n            default: null,\n            type: cc.AudioClip\n        },\n        audioBgm: {\n            default: null,\n            type: cc.AudioClip\n        },\n        bgmVolume: {\n            default: 10, \n            type: cc.Float,\n            range: [0, 10, 1], \n            slide: true,\n            tooltip: \"Âm lượng ban đầu của nhạc nền\"\n        },\n        loopBgm: {\n            default: true, \n            tooltip: \"Lặp lại nhạc nền khi kết thúc?\"\n        },\n        volumeDisplayLabel: {\n            default: null,\n            type: cc.Label,\n            tooltip: \"Label để hiển thị giá trị âm lượng BGM\"\n        },\n        volumeStep: {\n            default: 1,\n            type: cc.Float,\n            min: 0.5, // Bước nhỏ nhất\n            max: 1,  // Bước lớn nhất\n            tooltip: \"Lượng âm lượng thay đổi mỗi lần nhấn nút\"\n        }\n    },\n\n    // start() {\n\n    // },\n\n    onLoad() {\n        this.playBgm();\n        this.updateVolumeLabel();\n    },\n\n    playBgm() {\n        this.current = cc.audioEngine.play(this.audioBgm, false, 1);\n    },\n\n    playSoundClick() {\n        this.current = cc.audioEngine.play(this.audioClick, false, 1);\n\n    },\n    increaseBgmVolume() {\n        this.setBgmVolume(this.bgmVolume + this.volumeStep);\n        playSoundClick();\n    },\n\n    decreaseBgmVolume() {\n        this.setBgmVolume(this.bgmVolume - this.volumeStep);\n        playSoundClick();\n    },\n\n    setBgmVolume(volume) {\n        this.bgmVolume = this.bgmVolume = Math.max(0, Math.min(10, volume));\n        cc.audioEngine.setVolume(this.current, this.bgmVolume);\n        this.updateVolumeLabel();\n    },\n\n    updateVolumeLabel() {\n        if (this.volumeDisplayLabel) {\n            let volumePercent = Math.round(this.bgmVolume * 10);\n            this.volumeDisplayLabel.string = `Âm lượng: ${volumePercent}%`;\n        }\n    },\n\n    onDestroy() {\n    },\n\n});\n"]}