{"version":3,"sources":["soundController.js"],"names":["cc","Class","extends","Component","properties","audioClick","default","type","AudioClip","audioBgm","bgmVolume","Float","range","slide","tooltip","loopBgm","volumeStep","min","max","onLoad","playBgm","current","audioEngine","play","playSoundClick","increaseBgmVolume","setBgmVolume","decreaseBgmVolume","onDestroy"],"mappings":";;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SALJ;AASRC,kBAAU;AACNH,qBAAS,IADH;AAENC,kBAAMP,GAAGQ;AAFH,SATF;AAaRE,mBAAW;AACPJ,qBAAS,EADF;AAEPC,kBAAMP,GAAGW,KAFF;AAGPC,mBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAHA;AAIPC,mBAAO,IAJA;AAKPC,qBAAS;AALF,SAbH;AAoBRC,iBAAS;AACLT,qBAAS,IADJ;AAELQ,qBAAS;AAFJ,SApBD;;AAyBRE,oBAAY;AACRV,qBAAS,CADD;AAERC,kBAAMP,GAAGW,KAFD;AAGRM,iBAAK,GAHG,EAGE;AACVC,iBAAK,CAJG,EAIC;AACTJ,qBAAS;AALD;AAzBJ,KAHP;;AAqCL;;AAEA;;AAEAK,UAzCK,oBAyCI;AACL,aAAKC,OAAL;AACH,KA3CI;AA6CLA,WA7CK,qBA6CK;AACN,aAAKC,OAAL,GAAerB,GAAGsB,WAAH,CAAeC,IAAf,CAAoB,KAAKd,QAAzB,EAAmC,IAAnC,EAAyC,CAAzC,CAAf;AACH,KA/CI;AAiDLe,kBAjDK,4BAiDY;AACb,aAAKH,OAAL,GAAerB,GAAGsB,WAAH,CAAeC,IAAf,CAAoB,KAAKlB,UAAzB,EAAqC,KAArC,EAA4C,CAA5C,CAAf;AAEH,KApDI;AAqDLoB,qBArDK,+BAqDe;AAChB,aAAKC,YAAL,CAAkB,KAAKhB,SAAL,GAAiB,KAAKM,UAAxC;AACAQ;AACH,KAxDI;AA0DLG,qBA1DK,+BA0De;AAChB,aAAKD,YAAL,CAAkB,KAAKhB,SAAL,GAAiB,KAAKM,UAAxC;AACAQ;AACH,KA7DI;;;AA+DL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAI,aA5EK,uBA4EO,CACX;AA7EI,CAAT","file":"soundController.js","sourceRoot":"../../../../assets/Script","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // audioSource: {\n        //     type: cc.AudioSource,\n        //     default: null\n        // },\n        audioClick: {\n            default: null,\n            type: cc.AudioClip\n        },\n        audioBgm: {\n            default: null,\n            type: cc.AudioClip\n        },\n        bgmVolume: {\n            default: 10, \n            type: cc.Float,\n            range: [0, 10, 1], \n            slide: true,\n            tooltip: \"Âm lượng ban đầu của nhạc nền\"\n        },\n        loopBgm: {\n            default: true, \n            tooltip: \"Lặp lại nhạc nền khi kết thúc?\"\n        },\n        \n        volumeStep: {\n            default: 1,\n            type: cc.Float,\n            min: 0.5, // Bước nhỏ nhất\n            max: 1,  // Bước lớn nhất\n            tooltip: \"Lượng âm lượng thay đổi mỗi lần nhấn nút\"\n        }\n    },\n\n    // start() {\n\n    // },\n\n    onLoad() {\n        this.playBgm();\n    },\n\n    playBgm() {\n        this.current = cc.audioEngine.play(this.audioBgm, true, 1);\n    },\n\n    playSoundClick() {\n        this.current = cc.audioEngine.play(this.audioClick, false, 1);\n\n    },\n    increaseBgmVolume() {\n        this.setBgmVolume(this.bgmVolume + this.volumeStep);\n        playSoundClick();\n    },\n\n    decreaseBgmVolume() {\n        this.setBgmVolume(this.bgmVolume - this.volumeStep);\n        playSoundClick();\n    },\n\n    // setBgmVolume(volume) {\n    //     this.bgmVolume = this.bgmVolume = Math.max(0, Math.min(10, volume));\n    //     cc.audioEngine.setVolume(this.current, this.bgmVolume);\n    //     this.updateVolumeLabel();\n    // },\n\n    // updateVolumeLabel() {\n    //     if (this.volumeDisplayLabel) {\n    //         let volumePercent = Math.round(this.bgmVolume * 10);\n    //         this.volumeDisplayLabel.string = `Âm lượng: ${volumePercent}%`;\n    //     }\n    // },\n\n    onDestroy() {\n    },\n\n});\n"]}